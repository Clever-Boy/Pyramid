#pragma unmanaged
#include "GCNEnums.h"

namespace GCN
{
    namespace _INTERNAL
    {
        struct EnumLookup
        {
            unsigned int n;
            const char* str;
        };

        #define START_ENUM_TABLE(en) static const EnumLookup en##LUT[] = {
        #define ENUM(en) { en , #en },
        #define END_ENUM_TABLE {0,0} };

        START_ENUM_TABLE(SOP2_Opcodes)
            ENUM(S_ADD_U32)   
            ENUM(S_SUB_U32         )   
            ENUM(S_ADD_I32         )   
            ENUM(S_SUB_I32         )   
            ENUM(S_ADDC_U32        )   
            ENUM(S_SUBB_U32        )   
            ENUM(S_MIN_I32         )   
            ENUM(S_MIN_U32         )   
            ENUM(S_MAX_I32         )   
            ENUM(S_MAX_U32         )   
            ENUM(S_CSELECT_B32     )   
            ENUM(S_CSELECT_B64     )   
            ENUM(S_AND_B32         )   
            ENUM(S_AND_B64         )   
            ENUM(S_OR_B32          )   
            ENUM(S_OR_B64          )   
            ENUM(S_XOR_B32         )   
            ENUM(S_XOR_B64         )   
            ENUM(S_ANDN2_B32       )   
            ENUM(S_ANDN2_B64       )   
            ENUM(S_ORN2_B32        )   
            ENUM(S_ORN2_B64        )   
            ENUM(S_NAND_B32        )   
            ENUM(S_NAND_B64        )   
            ENUM(S_NOR_B32         )   
            ENUM(S_NOR_B64         )   
            ENUM(S_XNOR_B32        )   
            ENUM(S_XNOR_B64        )   
            ENUM(S_LSHL_B32        )   
            ENUM(S_LSHL_B64        )   
            ENUM(S_LSHR_B32        )   
            ENUM(S_LSHR_B64        )   
            ENUM(S_ASHR_I32        )   
            ENUM(S_ASHR_I64        )   
            ENUM(S_BFM_B32         )   
            ENUM(S_BFM_B64         )   
            ENUM(S_MUL_I32         )   
            ENUM(S_BFE_U32         )   
            ENUM(S_BFE_I32         )   
            ENUM(S_BFE_U64         )   
            ENUM(S_BFE_I64         )   
            ENUM(S_CBRANCH_G_FORK  )   
            ENUM(S_ABSDIFF_I32     )   
        END_ENUM_TABLE

        START_ENUM_TABLE(SOPK_Opcodes)
             ENUM(S_MOVK_I32         )    
             ENUM(S_CMOVK_I32        )    
             ENUM(S_CMPK_EQ_I32      )    
             ENUM(S_CMPK_LG_I32      )    
             ENUM(S_CMPK_GT_I32      )    
             ENUM(S_CMPK_GE_I32      )    
             ENUM(S_CMPK_LT_I32      )    
             ENUM(S_CMPK_LE_I32      )    
             ENUM(S_CMPK_EQ_U32      )    
             ENUM(S_CMPK_LG_U32      )    
             ENUM(S_CMPK_GT_U32      )    
             ENUM(S_CMPK_GE_U32      )    
             ENUM(S_CMPK_LT_U32      )    
             ENUM(S_CMPK_LE_U32      )    
             ENUM(S_ADDK_I32         )    
             ENUM(S_MULK_I32         )    
             ENUM(S_CBRANCH_I_FORK   )    
             ENUM(S_GETREG_B32       )    
             ENUM(S_SETREG_B32       )    
             ENUM(S_SETREG_IMM32_B32 )    
        END_ENUM_TABLE
         
        START_ENUM_TABLE(SOP1_Opcodes)
           ENUM( S_MOV_B32            ) 
           ENUM( S_MOV_B64            ) 
           ENUM( S_CMOV_B32           ) 
           ENUM( S_CMOV_B64           ) 
           ENUM( S_NOT_B32            ) 
           ENUM( S_NOT_B64            ) 
           ENUM( S_WQM_B32            ) 
           ENUM( S_WQM_B64            ) 
           ENUM( S_BREV_B32           ) 
           ENUM( S_BREV_B64           ) 
           ENUM( S_BCNT0_I32_B32      ) 
           ENUM( S_BCNT0_I32_B64      ) 
           ENUM( S_BCNT1_I32_B32      ) 
           ENUM( S_BCNT1_I32_B64      ) 
           ENUM( S_FF0_I32_B32        ) 
           ENUM( S_FF0_I32_B64        ) 
           ENUM( S_FF1_I32_B32        ) 
           ENUM( S_FF1_I32_B64        ) 
           ENUM( S_FLBIT_I32_B32      ) 
           ENUM( S_FLBIT_I32_B64      ) 
           ENUM( S_FLBIT_I32          ) 
           ENUM( S_FLBIT_I32_I64      ) 
           ENUM( S_SEXT_I32_I8        ) 
           ENUM( S_SEXT_I32_I16       ) 
           ENUM( S_BITSET0_B32        ) 
           ENUM( S_BITSET0_B64        ) 
           ENUM( S_BITSET1_B32        ) 
           ENUM( S_BITSET1_B64        ) 
           ENUM( S_GETPC_B64          ) 
           ENUM( S_SETPC_B64          ) 
           ENUM( S_SWAPPC_B64         ) 
           ENUM( S_RFE_B64            ) 
           ENUM( S_AND_SAVEEXEC_B64   ) 
           ENUM( S_OR_SAVEEXEC_B64    ) 
           ENUM( S_XOR_SAVEEXEC_B64   ) 
           ENUM( S_ANDN2_SAVEEXEC_B64 ) 
           ENUM( S_ORN2_SAVEEXEC_B64  ) 
           ENUM( S_NAND_SAVEEXEC_B64  ) 
           ENUM( S_NOR_SAVEEXEC_B64   ) 
           ENUM( S_XNOR_SAVEEXEC_B64  ) 
           ENUM( S_QUADMASK_B32       ) 
           ENUM( S_QUADMASK_B64       ) 
           ENUM( S_MOVRELS_B32        ) 
           ENUM( S_MOVRELS_B64        ) 
           ENUM( S_MOVRELD_B32        ) 
           ENUM( S_MOVRELD_B64        ) 
           ENUM( S_CBRANCH_JOIN       ) 
           ENUM( S_ABS_I32            ) 
           ENUM( S_MOV_FED_B32        ) 
        END_ENUM_TABLE
  
        START_ENUM_TABLE(SOPC_Opcodes)
            ENUM(S_CMP_EQ_I32    )      
            ENUM(S_CMP_LG_I32    )      
            ENUM(S_CMP_GT_I32    )      
            ENUM(S_CMP_GE_I32    )      
            ENUM(S_CMP_LT_I32    )      
            ENUM(S_CMP_LE_I32    )      
            ENUM(S_CMP_EQ_U32    )      
            ENUM(S_CMP_LG_U32    )      
            ENUM(S_CMP_GT_U32    )      
            ENUM(S_CMP_GE_U32    )      
            ENUM(S_CMP_LT_U32    )      
            ENUM(S_CMP_LE_U32    )      
            ENUM(S_BITCMP0_B32   )      
            ENUM(S_BITCMP1_B32   )      
            ENUM(S_BITCMP0_B64   )      
            ENUM(S_BITCMP1_B64   )      
            ENUM(S_SETVSKIP      )      
        END_ENUM_TABLE

        START_ENUM_TABLE(SOPP_Opcodes)
            ENUM(S_NOP                      )
            ENUM(S_ENDPGM                   )
            ENUM(S_BRANCH                   )
            ENUM(S_CBRANCH_SCC0             )
            ENUM(S_CBRANCH_SCC1             )
            ENUM(S_CBRANCH_VCCZ             )
            ENUM(S_CBRANCH_VCCNZ            )
            ENUM(S_CBRANCH_EXECZ            )
            ENUM(S_CBRANCH_EXECNZ           )
            ENUM(S_BARRIER                  )
            ENUM(S_WAITCNT                  )
            ENUM(S_SETHALT                  )
            ENUM(S_SLEEP                    )
            ENUM(S_SETPRIO                  )
            ENUM(S_SENDMSG                  )
            ENUM(S_SENDMSGHALT              )
            ENUM(S_TRAP                     )
            ENUM(S_ICACHE_INV               )
            ENUM(S_INCPERFLEVEL             )
            ENUM(S_DECPERFLEVEL             )
            ENUM(S_TTRACEDATA               )
            ENUM(S_CBRANCH_CDBGSYS          )
            ENUM(S_CBRANCH_CDBGUSER         )
            ENUM(S_CBRANCH_CDBGSYS_OR_USER  )
            ENUM(S_CBRANCH_CDBGSYS_AND_USER )
        END_ENUM_TABLE


        START_ENUM_TABLE(SMEM_Opcodes)
            ENUM(S_LOAD_DWORD            )
            ENUM(S_LOAD_DWORDX2          )
            ENUM(S_LOAD_DWORDX4          )
            ENUM(S_LOAD_DWORDX8          )
            ENUM(S_LOAD_DWORDX16         )
            ENUM(S_BUFFER_LOAD_DWORD     )
            ENUM(S_BUFFER_LOAD_DWORDX2   )
            ENUM(S_BUFFER_LOAD_DWORDX4   )
            ENUM(S_BUFFER_LOAD_DWORDX8   )
            ENUM(S_BUFFER_LOAD_DWORDX16  )
            ENUM(S_DCACHE_INV_VOL        )
            ENUM(S_MEMTIME               )
            ENUM(S_DCACHE_INV            )
        END_ENUM_TABLE

        START_ENUM_TABLE(VOP2_Opcodes)
            ENUM( V_CNDMASK_B32          )    
            ENUM( V_READLANE_B32         )    
            ENUM( V_WRITELANE_B32        )    
            ENUM( V_ADD_F32              )    
            ENUM( V_SUB_F32              )    
            ENUM( V_SUBREV_F32           )    
            ENUM( V_MAC_LEGACY_F32       )    
            ENUM( V_MUL_LEGACY_F32       )    
            ENUM( V_MUL_F32              )    
            ENUM( V_MUL_I32_I24          )    
            ENUM( V_MUL_HI_I32_I24       )    
            ENUM( V_MUL_U32_U24          )    
            ENUM( V_MUL_HI_U32_U24       )    
            ENUM( V_MIN_LEGACY_F32       )    
            ENUM( V_MAX_LEGACY_F32       )    
            ENUM( V_MIN_F32              )    
            ENUM( V_MAX_F32              )    
            ENUM( V_MIN_I32              )    
            ENUM( V_MAX_I32              )    
            ENUM( V_MIN_U32              )    
            ENUM( V_MAX_U32              )    
            ENUM( V_LSHR_B32             )    
            ENUM( V_LSHRREV_B32          )    
            ENUM( V_ASHR_I32             )    
            ENUM( V_ASHRREV_I32          )    
            ENUM( V_LSHL_B32             )    
            ENUM( V_LSHLREV_B32          )    
            ENUM( V_AND_B32              )    
            ENUM( V_OR_B32               )    
            ENUM( V_XOR_B32              )    
            ENUM( V_BFM_B32              )    
            ENUM( V_MAC_F32              )    
            ENUM( V_MADMK_F32            )    
            ENUM( V_MADAK_F32            )    
            ENUM( V_BCNT_U32_B32         )    
            ENUM( V_MBCNT_LO_U32_B32     )    
            ENUM( V_MBCNT_HI_U32_B32     )                                         
            ENUM( V_ADD_I32              )    
            ENUM( V_SUB_I32              )    
            ENUM( V_SUBREV_I32           )    
            ENUM( V_ADDC_U32             )    
            ENUM( V_SUBB_U32             )    
            ENUM( V_SUBBREV_U32          )    
            ENUM( V_LDEXP_F32            )    
            ENUM( V_CVT_PKACCUM_U8_F32   )    
            ENUM( V_CVT_PKNORM_I16_F32   )    
            ENUM( V_CVT_PKNORM_U16_F32   )    
            ENUM( V_CVT_PKRTZ_F16_F32    )    
            ENUM( V_CVT_PK_U16_U32       )    
            ENUM( V_CVT_PK_I16_I32       )    
        END_ENUM_TABLE


        START_ENUM_TABLE(VOP1_Opcodes)
           ENUM(V_NOP                  ) 
           ENUM(V_MOV_B32              ) 
           ENUM(V_READFIRSTLANE_B32    )        
           ENUM(V_CVT_I32_F64          ) 
           ENUM(V_CVT_F64_I32          ) 
           ENUM(V_CVT_F32_I32          ) 
           ENUM(V_CVT_F32_U32          ) 
           ENUM(V_CVT_U32_F32          ) 
           ENUM(V_CVT_I32_F32          ) 
           ENUM(V_MOV_FED_B32          ) 
           ENUM(V_CVT_F16_F32          ) 
           ENUM(V_CVT_F32_F16          ) 
           ENUM(V_CVT_RPI_I32_F32      ) 
           ENUM(V_CVT_FLR_I32_F32      ) 
           ENUM(V_CVT_OFF_F32_I4       ) 
           ENUM(V_CVT_F32_F64          ) 
           ENUM(V_CVT_F64_F32          ) 
           ENUM(V_CVT_F32_UBYTE0       ) 
           ENUM(V_CVT_F32_UBYTE1       ) 
           ENUM(V_CVT_F32_UBYTE2       ) 
           ENUM(V_CVT_F32_UBYTE3       ) 
           ENUM(V_CVT_U32_F64          ) 
           ENUM(V_CVT_F64_U32          ) 
           ENUM(V_TRUNC_F64            ) 
           ENUM(V_CEIL_F64             ) 
           ENUM(V_RNDNE_F64            ) 
           ENUM(V_FLOOR_F64            ) 
           ENUM(V_FRACT_F32            ) 
           ENUM(V_TRUNC_F32            ) 
           ENUM(V_CEIL_F32             ) 
           ENUM(V_RNDNE_F32            ) 
           ENUM(V_FLOOR_F32            ) 
           ENUM(V_EXP_F32              ) 
           ENUM(V_LOG_CLAMP_F32        ) 
           ENUM(V_LOG_F32              ) 
           ENUM(V_RCP_CLAMP_F32        ) 
           ENUM(V_RCP_LEGACY_F32       ) 
           ENUM(V_RCP_F32              ) 
           ENUM(V_RCP_IFLAG_F32        ) 
           ENUM(V_RSQ_CLAMP_F32        ) 
           ENUM(V_RSQ_LEGACY_F32       ) 
           ENUM(V_RSQ_F32              ) 
           ENUM(V_RCP_F64              ) 
           ENUM(V_RCP_CLAMP_F64        ) 
           ENUM(V_RSQ_F64              ) 
           ENUM(V_RSQ_CLAMP_F64        ) 
           ENUM(V_SQRT_F32             ) 
           ENUM(V_SQRT_F64             ) 
           ENUM(V_SIN_F32              ) 
           ENUM(V_COS_F32              ) 
           ENUM(V_NOT_B32              ) 
           ENUM(V_BFREV_B32            ) 
           ENUM(V_FFBH_U32             ) 
           ENUM(V_FFBL_B32             ) 
           ENUM(V_FFBH_I32             ) 
           ENUM(V_FREXP_EXP_I32_F64    ) 
           ENUM(V_FREXP_MANT_F64       ) 
           ENUM(V_FRACT_F64            ) 
           ENUM(V_FREXP_EXP_I32_F32    ) 
           ENUM(V_FREXP_MANT_F32       ) 
           ENUM(V_CLREXCP              ) 
           ENUM(V_MOVRELD_B32          ) 
           ENUM(V_MOVRELS_B32          ) 
           ENUM(V_MOVRELSD_B32         ) 
           ENUM(V_LOG_LEGACY_F32       )
           ENUM(V_EXP_LEGACY_F32       ) 
        END_ENUM_TABLE


        START_ENUM_TABLE(VOPC_Opcodes)
            ENUM(V_CMP_F_F32        )
            ENUM(V_CMP_LT_F32       )
            ENUM(V_CMP_EQ_F32       )
            ENUM(V_CMP_LE_F32       )
            ENUM(V_CMP_GT_F32       )
            ENUM(V_CMP_LG_F32       )
            ENUM(V_CMP_GE_F32       )
            ENUM(V_CMP_O_F32        )
            ENUM(V_CMP_U_F32        )
            ENUM(V_CMP_NGE_F32      )
            ENUM(V_CMP_NLG_F32      )
            ENUM(V_CMP_NGT_F32      )
            ENUM(V_CMP_NLE_F32      )
            ENUM(V_CMP_NEQ_F32      )
            ENUM(V_CMP_NLT_F32      )
            ENUM(V_CMP_TRU_F32      )
            ENUM(V_CMPX_F_F32       )
            ENUM(V_CMPX_LT_F32      )
            ENUM(V_CMPX_EQ_F32      )
            ENUM(V_CMPX_LE_F32      )
            ENUM(V_CMPX_GT_F32      )
            ENUM(V_CMPX_LG_F32      )
            ENUM(V_CMPX_GE_F32      )
            ENUM(V_CMPX_O_F32       )
            ENUM(V_CMPX_U_F32       )
            ENUM(V_CMPX_NGE_F32     )
            ENUM(V_CMPX_NLG_F32     )
            ENUM(V_CMPX_NGT_F32     )
            ENUM(V_CMPX_NLE_F32     )
            ENUM(V_CMPX_NEQ_F32     )
            ENUM(V_CMPX_NLT_F32     )
            ENUM(V_CMPX_TRU_F32     )
            ENUM(V_CMP_F_F64        )
            ENUM(V_CMP_LT_F64       )
            ENUM(V_CMP_EQ_F64       )
            ENUM(V_CMP_LE_F64       )
            ENUM(V_CMP_GT_F64       )
            ENUM(V_CMP_LG_F64       )
            ENUM(V_CMP_GE_F64       )
            ENUM(V_CMP_O_F64        )
            ENUM(V_CMP_U_F64        )
            ENUM(V_CMP_NGE_F64      )
            ENUM(V_CMP_NLG_F64      )
            ENUM(V_CMP_NGT_F64      )
            ENUM(V_CMP_NLE_F64      )
            ENUM(V_CMP_NEQ_F64      )
            ENUM(V_CMP_NLT_F64      )
            ENUM(V_CMP_TRU_F64      )
            ENUM(V_CMPX_F_F64       )
            ENUM(V_CMPX_LT_F64      )
            ENUM(V_CMPX_EQ_F64      )
            ENUM(V_CMPX_LE_F64      )
            ENUM(V_CMPX_GT_F64      )
            ENUM(V_CMPX_LG_F64      )
            ENUM(V_CMPX_GE_F64      )
            ENUM(V_CMPX_O_F64       )
            ENUM(V_CMPX_U_F64       )
            ENUM(V_CMPX_NGE_F64     )
            ENUM(V_CMPX_NLG_F64     )
            ENUM(V_CMPX_NGT_F64     )
            ENUM(V_CMPX_NLE_F64     )
            ENUM(V_CMPX_NEQ_F64     )
            ENUM(V_CMPX_NLT_F64     )
            ENUM(V_CMPX_TRU_F64     )
            ENUM(V_CMPS_F_F32       )
            ENUM(V_CMPS_LT_F32      )
            ENUM(V_CMPS_EQ_F32      )
            ENUM(V_CMPS_LE_F32      )
            ENUM(V_CMPS_GT_F32      )
            ENUM(V_CMPS_LG_F32      )
            ENUM(V_CMPS_GE_F32      )
            ENUM(V_CMPS_O_F32       )
            ENUM(V_CMPS_U_F32       )
            ENUM(V_CMPS_NGE_F32     )
            ENUM(V_CMPS_NLG_F32     )
            ENUM(V_CMPS_NGT_F32     )
            ENUM(V_CMPS_NLE_F32     )
            ENUM(V_CMPS_NEQ_F32     )
            ENUM(V_CMPS_NLT_F32     )
            ENUM(V_CMPS_TRU_F32     )
            ENUM(V_CMPSX_F_F32      )
            ENUM(V_CMPSX_LT_F32     )
            ENUM(V_CMPSX_EQ_F32     )
            ENUM(V_CMPSX_LE_F32     )
            ENUM(V_CMPSX_GT_F32     )
            ENUM(V_CMPSX_LG_F32     )
            ENUM(V_CMPSX_GE_F32     )
            ENUM(V_CMPSX_O_F32      )
            ENUM(V_CMPSX_U_F32      )
            ENUM(V_CMPSX_NGE_F32    )
            ENUM(V_CMPSX_NLG_F32    )
            ENUM(V_CMPSX_NGT_F32    )
            ENUM(V_CMPSX_NLE_F32    )
            ENUM(V_CMPSX_NEQ_F32    )
            ENUM(V_CMPSX_NLT_F32    )
            ENUM(V_CMPSX_TRU_F32    )
            ENUM(V_CMPS_F_F64       )
            ENUM(V_CMPS_LT_F64      )
            ENUM(V_CMPS_EQ_F64      )
            ENUM(V_CMPS_LE_F64      )
            ENUM(V_CMPS_GT_F64      )
            ENUM(V_CMPS_LG_F64      )
            ENUM(V_CMPS_GE_F64      )
            ENUM(V_CMPS_O_F64       )
            ENUM(V_CMPS_U_F64       )
            ENUM(V_CMPS_NGE_F64     )
            ENUM(V_CMPS_NLG_F64     )
            ENUM(V_CMPS_NGT_F64     )
            ENUM(V_CMPS_NLE_F64     )
            ENUM(V_CMPS_NEQ_F64     )
            ENUM(V_CMPS_NLT_F64     )
            ENUM(V_CMPS_TRU_F64     )
            ENUM(V_CMPSX_F_F64      )
            ENUM(V_CMPSX_LT_F64     )
            ENUM(V_CMPSX_EQ_F64     )
            ENUM(V_CMPSX_LE_F64     )
            ENUM(V_CMPSX_GT_F64     )
            ENUM(V_CMPSX_LG_F64     )
            ENUM(V_CMPSX_GE_F64     )
            ENUM(V_CMPSX_O_F64      )
            ENUM(V_CMPSX_U_F64      )
            ENUM(V_CMPSX_NGE_F64    )
            ENUM(V_CMPSX_NLG_F64    )
            ENUM(V_CMPSX_NGT_F64    )
            ENUM(V_CMPSX_NLE_F64    )
            ENUM(V_CMPSX_NEQ_F64    )
            ENUM(V_CMPSX_NLT_F64    )
            ENUM(V_CMPSX_TRU_F64    )
            ENUM(V_CMP_F_I32        )
            ENUM(V_CMP_LT_I32       )
            ENUM(V_CMP_EQ_I32       )
            ENUM(V_CMP_LE_I32       )
            ENUM(V_CMP_GT_I32       )
            ENUM(V_CMP_LG_I32       )
            ENUM(V_CMP_GE_I32       )
            ENUM(V_CMP_TRU_I32      )
            ENUM(V_CMPX_F_I32       )
            ENUM(V_CMPX_LT_I32      )
            ENUM(V_CMPX_EQ_I32      )
            ENUM(V_CMPX_LE_I32      )
            ENUM(V_CMPX_GT_I32      )
            ENUM(V_CMPX_LG_I32      )
            ENUM(V_CMPX_GE_I32      )
            ENUM(V_CMPX_TRU_I32     )
            ENUM(V_CMP_F_I64        )
            ENUM(V_CMP_LT_I64       )
            ENUM(V_CMP_EQ_I64       )
            ENUM(V_CMP_LE_I64       )
            ENUM(V_CMP_GT_I64       )
            ENUM(V_CMP_LG_I64       )
            ENUM(V_CMP_GE_I64       )
            ENUM(V_CMP_TRU_I64      )
            ENUM(V_CMPX_F_I64       )
            ENUM(V_CMPX_LT_I64      )
            ENUM(V_CMPX_EQ_I64      )
            ENUM(V_CMPX_LE_I64      )
            ENUM(V_CMPX_GT_I64      )
            ENUM(V_CMPX_LG_I64      )
            ENUM(V_CMPX_GE_I64      )
            ENUM(V_CMPX_TRU_I64     )
            ENUM(V_CMP_F_U32        )
            ENUM(V_CMP_LT_U32       )
            ENUM(V_CMP_EQ_U32       )
            ENUM(V_CMP_LE_U32       )
            ENUM(V_CMP_GT_U32       )
            ENUM(V_CMP_LG_U32       )
            ENUM(V_CMP_GE_U32       )
            ENUM(V_CMP_TRU_U32      )
            ENUM(V_CMPX_F_U32       )
            ENUM(V_CMPX_LT_U32      )
            ENUM(V_CMPX_EQ_U32      )
            ENUM(V_CMPX_LE_U32      )
            ENUM(V_CMPX_GT_U32      )
            ENUM(V_CMPX_LG_U32      )
            ENUM(V_CMPX_GE_U32      )
            ENUM(V_CMPX_TRU_U32     )
            ENUM(V_CMP_F_U64        )
            ENUM(V_CMP_LT_U64       )
            ENUM(V_CMP_EQ_U64       )
            ENUM(V_CMP_LE_U64       )
            ENUM(V_CMP_GT_U64       )
            ENUM(V_CMP_LG_U64       )
            ENUM(V_CMP_GE_U64       )
            ENUM(V_CMP_TRU_U64      )
            ENUM(V_CMPx_F_U64       )
            ENUM(V_CMPx_LT_U64      )
            ENUM(V_CMPx_EQ_U64      )
            ENUM(V_CMPx_LE_U64      )
            ENUM(V_CMPx_GT_U64      )
            ENUM(V_CMPx_LG_U64      )
            ENUM(V_CMPx_GE_U64      )
            ENUM(V_CMPx_TRU_U64     )
            ENUM(V_CMP_CLASS_F32    )
            ENUM(V_CMPX_CLASS_F32   )
            ENUM(V_CMP_CLASS_F64    )
            ENUM(V_CMPX_CLASS_F64   )
        END_ENUM_TABLE

        #define ENUM_V3(en) { V3_##en, "v_"#en },
        START_ENUM_TABLE(VOP3_Opcodes)
            ENUM_V3(CMP_F_F32       )
            ENUM_V3(CMP_LT_F32      )
            ENUM_V3(CMP_EQ_F32      )
            ENUM_V3(CMP_LE_F32      )
            ENUM_V3(CMP_GT_F32      )
            ENUM_V3(CMP_LG_F32      )
            ENUM_V3(CMP_GE_F32      )
            ENUM_V3(CMP_O_F32       )
            ENUM_V3(CMP_U_F32       )
            ENUM_V3(CMP_NGE_F32     )
            ENUM_V3(CMP_NLG_F32     )
            ENUM_V3(CMP_NGT_F32     )
            ENUM_V3(CMP_NLE_F32     )
            ENUM_V3(CMP_NEQ_F32     )
            ENUM_V3(CMP_NLT_F32     )
            ENUM_V3(CMP_TRU_F32     )
            ENUM_V3(CMPX_F_F32      )
            ENUM_V3(CMPX_LT_F32     )
            ENUM_V3(CMPX_EQ_F32     )
            ENUM_V3(CMPX_LE_F32     )
            ENUM_V3(CMPX_GT_F32     )
            ENUM_V3(CMPX_LG_F32     )
            ENUM_V3(CMPX_GE_F32     )
            ENUM_V3(CMPX_O_F32      )
            ENUM_V3(CMPX_U_F32      )
            ENUM_V3(CMPX_NGE_F32    )
            ENUM_V3(CMPX_NLG_F32    )
            ENUM_V3(CMPX_NGT_F32    )
            ENUM_V3(CMPX_NLE_F32    )
            ENUM_V3(CMPX_NEQ_F32    )
            ENUM_V3(CMPX_NLT_F32    )
            ENUM_V3(CMPX_TRU_F32    )
            ENUM_V3(CMP_F_F64       )
            ENUM_V3(CMP_LT_F64      )
            ENUM_V3(CMP_EQ_F64      )
            ENUM_V3(CMP_LE_F64      )
            ENUM_V3(CMP_GT_F64      )
            ENUM_V3(CMP_LG_F64      )
            ENUM_V3(CMP_GE_F64      )
            ENUM_V3(CMP_O_F64       )
            ENUM_V3(CMP_U_F64       )
            ENUM_V3(CMP_NGE_F64     )
            ENUM_V3(CMP_NLG_F64     )
            ENUM_V3(CMP_NGT_F64     )
            ENUM_V3(CMP_NLE_F64     )
            ENUM_V3(CMP_NEQ_F64     )
            ENUM_V3(CMP_NLT_F64     )
            ENUM_V3(CMP_TRU_F64     )
            ENUM_V3(CMPX_F_F64      )
            ENUM_V3(CMPX_LT_F64     )
            ENUM_V3(CMPX_EQ_F64     )
            ENUM_V3(CMPX_LE_F64     )
            ENUM_V3(CMPX_GT_F64     )
            ENUM_V3(CMPX_LG_F64     )
            ENUM_V3(CMPX_GE_F64     )
            ENUM_V3(CMPX_O_F64      )
            ENUM_V3(CMPX_U_F64      )
            ENUM_V3(CMPX_NGE_F64    )
            ENUM_V3(CMPX_NLG_F64    )
            ENUM_V3(CMPX_NGT_F64    )
            ENUM_V3(CMPX_NLE_F64    )
            ENUM_V3(CMPX_NEQ_F64    )
            ENUM_V3(CMPX_NLT_F64    )
            ENUM_V3(CMPX_TRU_F64    )
            ENUM_V3(CMPS_F_F32      )
            ENUM_V3(CMPS_LT_F32     )
            ENUM_V3(CMPS_EQ_F32     )
            ENUM_V3(CMPS_LE_F32     )
            ENUM_V3(CMPS_GT_F32     )
            ENUM_V3(CMPS_LG_F32     )
            ENUM_V3(CMPS_GE_F32     )
            ENUM_V3(CMPS_O_F32      )
            ENUM_V3(CMPS_U_F32      )
            ENUM_V3(CMPS_NGE_F32    )
            ENUM_V3(CMPS_NLG_F32    )
            ENUM_V3(CMPS_NGT_F32    )
            ENUM_V3(CMPS_NLE_F32    )
            ENUM_V3(CMPS_NEQ_F32    )
            ENUM_V3(CMPS_NLT_F32    )
            ENUM_V3(CMPS_TRU_F32    )
            ENUM_V3(CMPSX_F_F32     )
            ENUM_V3(CMPSX_LT_F32    )
            ENUM_V3(CMPSX_EQ_F32    )
            ENUM_V3(CMPSX_LE_F32    )
            ENUM_V3(CMPSX_GT_F32    )
            ENUM_V3(CMPSX_LG_F32    )
            ENUM_V3(CMPSX_GE_F32    )
            ENUM_V3(CMPSX_O_F32     )
            ENUM_V3(CMPSX_U_F32     )
            ENUM_V3(CMPSX_NGE_F32   )
            ENUM_V3(CMPSX_NLG_F32   )
            ENUM_V3(CMPSX_NGT_F32   )
            ENUM_V3(CMPSX_NLE_F32   )
            ENUM_V3(CMPSX_NEQ_F32   )
            ENUM_V3(CMPSX_NLT_F32   )
            ENUM_V3(CMPSX_TRU_F32   )
            ENUM_V3(CMPS_F_F64      )
            ENUM_V3(CMPS_LT_F64     )
            ENUM_V3(CMPS_EQ_F64     )
            ENUM_V3(CMPS_LE_F64     )
            ENUM_V3(CMPS_GT_F64     )
            ENUM_V3(CMPS_LG_F64     )
            ENUM_V3(CMPS_GE_F64     )
            ENUM_V3(CMPS_O_F64      )
            ENUM_V3(CMPS_U_F64      )
            ENUM_V3(CMPS_NGE_F64    )
            ENUM_V3(CMPS_NLG_F64    )
            ENUM_V3(CMPS_NGT_F64    )
            ENUM_V3(CMPS_NLE_F64    )
            ENUM_V3(CMPS_NEQ_F64    )
            ENUM_V3(CMPS_NLT_F64    )
            ENUM_V3(CMPS_TRU_F64    )
            ENUM_V3(CMPSX_F_F64     )
            ENUM_V3(CMPSX_LT_F64    )
            ENUM_V3(CMPSX_EQ_F64    )
            ENUM_V3(CMPSX_LE_F64    )
            ENUM_V3(CMPSX_GT_F64    )
            ENUM_V3(CMPSX_LG_F64    )
            ENUM_V3(CMPSX_GE_F64    )
            ENUM_V3(CMPSX_O_F64     )
            ENUM_V3(CMPSX_U_F64     )
            ENUM_V3(CMPSX_NGE_F64   )
            ENUM_V3(CMPSX_NLG_F64   )
            ENUM_V3(CMPSX_NGT_F64   )
            ENUM_V3(CMPSX_NLE_F64   )
            ENUM_V3(CMPSX_NEQ_F64   )
            ENUM_V3(CMPSX_NLT_F64   )
            ENUM_V3(CMPSX_TRU_F64   )
            ENUM_V3(CMP_F_I32       )
            ENUM_V3(CMP_LT_I32      )
            ENUM_V3(CMP_EQ_I32      )
            ENUM_V3(CMP_LE_I32      )
            ENUM_V3(CMP_GT_I32      )
            ENUM_V3(CMP_LG_I32      )
            ENUM_V3(CMP_GE_I32      )
            ENUM_V3(CMP_TRU_I32     )
            ENUM_V3(CMPX_F_I32      )
            ENUM_V3(CMPX_LT_I32     )
            ENUM_V3(CMPX_EQ_I32     )
            ENUM_V3(CMPX_LE_I32     )
            ENUM_V3(CMPX_GT_I32     )
            ENUM_V3(CMPX_LG_I32     )
            ENUM_V3(CMPX_GE_I32     )
            ENUM_V3(CMPX_TRU_I32    )
            ENUM_V3(CMP_F_I64       )
            ENUM_V3(CMP_LT_I64      )
            ENUM_V3(CMP_EQ_I64      )
            ENUM_V3(CMP_LE_I64      )
            ENUM_V3(CMP_GT_I64      )
            ENUM_V3(CMP_LG_I64      )
            ENUM_V3(CMP_GE_I64      )
            ENUM_V3(CMP_TRU_I64     )
            ENUM_V3(CMPX_F_I64      )
            ENUM_V3(CMPX_LT_I64     )
            ENUM_V3(CMPX_EQ_I64     )
            ENUM_V3(CMPX_LE_I64     )
            ENUM_V3(CMPX_GT_I64     )
            ENUM_V3(CMPX_LG_I64     )
            ENUM_V3(CMPX_GE_I64     )
            ENUM_V3(CMPX_TRU_I64    )
            ENUM_V3(CMP_F_U32       )
            ENUM_V3(CMP_LT_U32      )
            ENUM_V3(CMP_EQ_U32      )
            ENUM_V3(CMP_LE_U32      )
            ENUM_V3(CMP_GT_U32      )
            ENUM_V3(CMP_LG_U32      )
            ENUM_V3(CMP_GE_U32      )
            ENUM_V3(CMP_TRU_U32     )
            ENUM_V3(CMPX_F_U32      )
            ENUM_V3(CMPX_LT_U32     )
            ENUM_V3(CMPX_EQ_U32     )
            ENUM_V3(CMPX_LE_U32     )
            ENUM_V3(CMPX_GT_U32     )
            ENUM_V3(CMPX_LG_U32     )
            ENUM_V3(CMPX_GE_U32     )
            ENUM_V3(CMPX_TRU_U32    )
            ENUM_V3(CMP_F_U64       )
            ENUM_V3(CMP_LT_U64      )
            ENUM_V3(CMP_EQ_U64      )
            ENUM_V3(CMP_LE_U64      )
            ENUM_V3(CMP_GT_U64      )
            ENUM_V3(CMP_LG_U64      )
            ENUM_V3(CMP_GE_U64      )
            ENUM_V3(CMP_TRU_U64     )
            ENUM_V3(CMPx_F_U64      )
            ENUM_V3(CMPx_LT_U64     )
            ENUM_V3(CMPx_EQ_U64     )
            ENUM_V3(CMPx_LE_U64     )
            ENUM_V3(CMPx_GT_U64     )
            ENUM_V3(CMPx_LG_U64     )
            ENUM_V3(CMPx_GE_U64     )
            ENUM_V3(CMPx_TRU_U64    )
            ENUM_V3(CMP_CLASS_F32   )
            ENUM_V3(CMPX_CLASS_F32  )
            ENUM_V3(CMP_CLASS_F64   )
            ENUM_V3(CMPX_CLASS_F64  )
            ENUM_V3(CNDMASK_B32         )
            ENUM_V3(READLANE_B32        )
            ENUM_V3(WRITELANE_B32       )
            ENUM_V3(ADD_F32             )
            ENUM_V3(SUB_F32             )
            ENUM_V3(SUBREV_F32          )
            ENUM_V3(MAC_LEGACY_F32      )
            ENUM_V3(MUL_LEGACY_F32      )
            ENUM_V3(MUL_F32             )
            ENUM_V3(MUL_I32_I24         )
            ENUM_V3(MUL_HI_I32_I24      )
            ENUM_V3(MUL_U32_U24         )
            ENUM_V3(MUL_HI_U32_U24      )
            ENUM_V3(MIN_LEGACY_F32      )
            ENUM_V3(MAX_LEGACY_F32      )
            ENUM_V3(MIN_F32             )
            ENUM_V3(MAX_F32             )
            ENUM_V3(MIN_I32             )
            ENUM_V3(MAX_I32             )
            ENUM_V3(MIN_U32             )
            ENUM_V3(MAX_U32             )
            ENUM_V3(LSHR_B32            )
            ENUM_V3(LSHRREV_B32         )
            ENUM_V3(ASHR_I32            )
            ENUM_V3(ASHRREV_I32         )
            ENUM_V3(LSHL_B32            )
            ENUM_V3(LSHLREV_B32         )
            ENUM_V3(AND_B32             )
            ENUM_V3(OR_B32              )
            ENUM_V3(XOR_B32             )
            ENUM_V3(BFM_B32             )
            ENUM_V3(MAC_F32             )
            ENUM_V3(MADMK_F32           )
            ENUM_V3(MADAK_F32           )
            ENUM_V3(BCNT_U32_B32        )
            ENUM_V3(MBCNT_LO_U32_B32    )
            ENUM_V3(MBCNT_HI_U32_B32    )
            ENUM_V3(LDEXP_F32           )
            ENUM_V3(CVT_PKACCUM_U8_F32  )
            ENUM_V3(CVT_PKNORM_I16_F32  )
            ENUM_V3(CVT_PKNORM_U16_F32  )
            ENUM_V3(CVT_PKRTZ_F16_F32   )
            ENUM_V3(CVT_PK_U16_U32      )
            ENUM_V3(CVT_PK_I16_I32      )
            ENUM_V3(MAD_LEGACY_F32      )
            ENUM_V3(MAD_F32             )
            ENUM_V3(MAD_I32_I24         )
            ENUM_V3(MAD_U32_U24         )
            ENUM_V3(CUBEID_F32          )
            ENUM_V3(CUBESC_F32          )
            ENUM_V3(CUBETC_F32          )
            ENUM_V3(CUBEMA_F32          )
            ENUM_V3(BFE_U32             )
            ENUM_V3(BFE_I32             )
            ENUM_V3(BFI_B32             )
            ENUM_V3(FMA_F32             )
            ENUM_V3(FMA_F64             )
            ENUM_V3(LERP_U8             )
            ENUM_V3(ALIGNBIT_B32        )
            ENUM_V3(ALIGNBYTE_B32       )
            ENUM_V3(MULLIT_F32          )
            ENUM_V3(MIN3_F32            )
            ENUM_V3(MIN3_I32            )
            ENUM_V3(MIN3_U32            )
            ENUM_V3(MAX3_F32            )
            ENUM_V3(MAX3_I32            )
            ENUM_V3(MAX3_U32            )
            ENUM_V3(MED3_F32            )
            ENUM_V3(MED3_I32            )
            ENUM_V3(MED3_U32            )
            ENUM_V3(SAD_U8              )
            ENUM_V3(SAD_HI_U8           )
            ENUM_V3(SAD_U16             )
            ENUM_V3(SAD_U32             )
            ENUM_V3(CVT_PK_U8_F32       )
            ENUM_V3(DIV_FIXUP_F32       )
            ENUM_V3(DIV_FIXUP_F64       )
            ENUM_V3(LSHL_B64            )
            ENUM_V3(LSHR_B64            )
            ENUM_V3(ASHR_I64            )
            ENUM_V3(ADD_F64             )
            ENUM_V3(MUL_F64             )
            ENUM_V3(MIN_F64             )
            ENUM_V3(MAX_F64             )
            ENUM_V3(LDEXP_F64           )
            ENUM_V3(MUL_LO_U32          )
            ENUM_V3(MUL_HI_U32          )
            ENUM_V3(MUL_LO_I32          )
            ENUM_V3(MUL_HI_I32          )
            ENUM_V3(DIV_FMAS_F32        )
            ENUM_V3(DIV_FMAS_F64        )
            ENUM_V3(MSAD_U8             )
            ENUM_V3(QSAD_U8             )
            ENUM_V3(MQSAD_U8            )
            ENUM_V3(QSAD_PK_U16_U8      )
            ENUM_V3(MQSAD_PK_U16_U8     )
            ENUM_V3(TRIG_PREOP_F64      )
            ENUM_V3(MQSAD_U32_U8        )
            ENUM_V3(MAD_U64_U32         )
            ENUM_V3(MAD_I64_I32         )
            ENUM_V3(NOP                 )
            ENUM_V3(MOV_B32             )
            ENUM_V3(READFIRSTLANE_B32   )
            ENUM_V3(CVT_I32_F64         )
            ENUM_V3(CVT_F64_I32         )
            ENUM_V3(CVT_F32_I32         )
            ENUM_V3(CVT_F32_U32         )
            ENUM_V3(CVT_U32_F32         )
            ENUM_V3(CVT_I32_F32         )
            ENUM_V3(MOV_FED_B32         )
            ENUM_V3(CVT_F16_F32         )
            ENUM_V3(CVT_F32_F16         )
            ENUM_V3(CVT_RPI_I32_F32     )
            ENUM_V3(CVT_FLR_I32_F32     )
            ENUM_V3(CVT_OFF_F32_I4      )
            ENUM_V3(CVT_F32_F64         )
            ENUM_V3(CVT_F64_F32         )
            ENUM_V3(CVT_F32_UBYTE0      )
            ENUM_V3(CVT_F32_UBYTE1      )
            ENUM_V3(CVT_F32_UBYTE2      )
            ENUM_V3(CVT_F32_UBYTE3      )
            ENUM_V3(CVT_U32_F64         )
            ENUM_V3(CVT_F64_U32         )
            ENUM_V3(FRACT_F32           )
            ENUM_V3(TRUNC_F32           )
            ENUM_V3(CEIL_F32            )
            ENUM_V3(RNDNE_F32           )
            ENUM_V3(FLOOR_F32           )
            ENUM_V3(EXP_F32             )
            ENUM_V3(LOG_CLAMP_F32       )
            ENUM_V3(LOG_F32             )
            ENUM_V3(RCP_CLAMP_F32       )
            ENUM_V3(RCP_LEGACY_F32      )
            ENUM_V3(RCP_F32             )
            ENUM_V3(RCP_IFLAG_F32       )
            ENUM_V3(RSQ_CLAMP_F32       )
            ENUM_V3(RSQ_LEGACY_F32      )
            ENUM_V3(RSQ_F32             )
            ENUM_V3(RCP_F64             )
            ENUM_V3(RCP_CLAMP_F64       )
            ENUM_V3(RSQ_F64             )
            ENUM_V3(RSQ_CLAMP_F64       )
            ENUM_V3(SQRT_F32            )
            ENUM_V3(SQRT_F64            )
            ENUM_V3(SIN_F32             )
            ENUM_V3(COS_F32             )
            ENUM_V3(NOT_B32             )
            ENUM_V3(BFREV_B32           )
            ENUM_V3(FFBH_U32            )
            ENUM_V3(FFBL_B32            )
            ENUM_V3(FFBH_I32            )
            ENUM_V3(FREXP_EXP_I32_F64   )
            ENUM_V3(FREXP_MANT_F64      )
            ENUM_V3(FRACT_F64           )
            ENUM_V3(FREXP_EXP_I32_F32   )
            ENUM_V3(FREXP_MANT_F32      )
            ENUM_V3(CLREXCP             )
            ENUM_V3(MOVRELD_B32         )
            ENUM_V3(MOVRELS_B32         )
            ENUM_V3(MOVRELSD_B32        )
            ENUM_V3(ADD_I32             )
            ENUM_V3(SUB_I32             )
            ENUM_V3(SUBREV_I32          )
            ENUM_V3(ADDC_U32            )
            ENUM_V3(SUBB_U32            )
            ENUM_V3(SUBBREV_U32         )
            ENUM_V3(DIV_SCALE_F32       )
            ENUM_V3(DIV_SCALE_F64       )
        END_ENUM_TABLE
    
        START_ENUM_TABLE(VINTERP_Opcodes)
            ENUM(V_INTERP_P1_F32 )
            ENUM(V_INTERP_P2_F32 )
            ENUM(V_INTERP_MOV_F32)
        END_ENUM_TABLE

        START_ENUM_TABLE(DS_Opcodes)
             ENUM( DS_ADD_U32             )
             ENUM( DS_SUB_U32             )
             ENUM( DS_RSUB_U32            )
             ENUM( DS_INC_U32             )
             ENUM( DS_DEC_U32             )
             ENUM( DS_MIN_I32             )
             ENUM( DS_MAX_I32             )
             ENUM( DS_MIN_U32             )
             ENUM( DS_MAX_U32             )
             ENUM( DS_AND_B32             )
             ENUM( DS_OR_B32              )
             ENUM( DS_XOR_B32             )
             ENUM( DS_MSKOR_B32           )
             ENUM( DS_WRITE_B32           )
             ENUM( DS_WRITE2_B32          )
             ENUM( DS_WRITE2ST64_B32      )
             ENUM( DS_CMPST_B32           )
             ENUM( DS_CMPST_F32           )
             ENUM( DS_MIN_F32             )
             ENUM( DS_MAX_F32             )
             ENUM( DS_NOP                 )
             ENUM( DS_GWS_SEMA_RELEASE_ALL)
             ENUM( DS_GWS_INIT            )
             ENUM( DS_GWS_SEMA_V          )
             ENUM( DS_GWS_SEMA_BR         )
             ENUM( DS_GWS_SEMA_P          )
             ENUM( DS_GWS_BARRIER         )
             ENUM( DS_WRITE_B8            )
             ENUM( DS_WRITE_B16           )
             ENUM( DS_ADD_RTN_U32         )
             ENUM( DS_SUB_RTN_U32         )
             ENUM( DS_RSUB_RTN_U32        )
             ENUM( DS_INC_RTN_U32         )
             ENUM( DS_DEC_RTN_U32         )
             ENUM( DS_MIN_RTN_I32         )
             ENUM( DS_MAX_RTN_I32         )
             ENUM( DS_MIN_RTN_U32         )
             ENUM( DS_MAX_RTN_U32         )
             ENUM( DS_AND_RTN_B32         )
             ENUM( DS_OR_RTN_B32          )
             ENUM( DS_XOR_RTN_B32         )
             ENUM( DS_MSKOR_RTN_B32       )
             ENUM( DS_WRXCHG_RTN_B32      )
             ENUM( DS_WRXCHG2_RTN_B32     )
             ENUM( DS_WRXCHG2ST64_RTN_B32 )
             ENUM( DS_CMPST_RTN_B32       )
             ENUM( DS_CMPST_RTN_F32       )
             ENUM( DS_MIN_RTN_F32         )
             ENUM( DS_MAX_RTN_F32         )
             ENUM( DS_WRAP_RTN_B32        )
             ENUM( DS_SWIZZLE_B32         )
             ENUM( DS_READ_B32            )
             ENUM( DS_READ2_B32           )
             ENUM( DS_READ2ST64_B32       )
             ENUM( DS_READ_I8             )
             ENUM( DS_READ_U8             )
             ENUM( DS_READ_I16            )
             ENUM( DS_READ_U16            )
             ENUM( DS_CONSUME             )
             ENUM( DS_APPEND              )
             ENUM( DS_ORDERED_COUNT       )
             ENUM( DS_ADD_U64             )
             ENUM( DS_SUB_U64             )
             ENUM( DS_RSUB_U64            )
             ENUM( DS_INC_U64             )
             ENUM( DS_DEC_U64             )
             ENUM( DS_MIN_I64             )
             ENUM( DS_MAX_I64             )
             ENUM( DS_MIN_U64             )
             ENUM( DS_MAX_U64             )
             ENUM( DS_AND_B64             )
             ENUM( DS_OR_B64              )
             ENUM( DS_XOR_B64             )
             ENUM( DS_MSKOR_B64           )
             ENUM( DS_WRITE_B64           )
             ENUM( DS_WRITE2_B64          )
             ENUM( DS_WRITE2ST64_B64      )
             ENUM( DS_CMPST_B64           )
             ENUM( DS_CMPST_F64           )
             ENUM( DS_MIN_F64             )
             ENUM( DS_MAX_F64             )
             ENUM( DS_ADD_RTN_U64         )
             ENUM( DS_SUB_RTN_U64         )
             ENUM( DS_RSUB_RTN_U64        )
             ENUM( DS_INC_RTN_U64         )
             ENUM( DS_DEC_RTN_U64         )
             ENUM( DS_MIN_RTN_I64         )
             ENUM( DS_MAX_RTN_I64         )
             ENUM( DS_MIN_RTN_U64         )
             ENUM( DS_MAX_RTN_U64         )
             ENUM( DS_AND_RTN_B64         )
             ENUM( DS_OR_RTN_B64          )
             ENUM( DS_XOR_RTN_B64         )
             ENUM( DS_MSKOR_RTN_B64       )
             ENUM( DS_WRXCHG_RTN_B64      )
             ENUM( DS_WRXCHG2_RTN_B64     )
             ENUM( DS_WRXCHG2ST64_RTN_B64 )
             ENUM( DS_CMPST_RTN_B64       )
             ENUM( DS_CMPST_RTN_F64       )
             ENUM( DS_MIN_RTN_F64         )
             ENUM( DS_MAX_RTN_F64         )
             ENUM( DS_READ_B64            )
             ENUM( DS_READ2_B64           )
             ENUM( DS_READ2ST64_B64       )
             ENUM( DS_CONDXCHG32_RTN_B64  )
             ENUM( DS_ADD_SRC2_U32        )
             ENUM( DS_SUB_SRC2_U32        )
             ENUM( DS_RSUB_SRC2_U32       )
             ENUM( DS_INC_SRC2_U32        )
             ENUM( DS_DEC_SRC2_U32        )
             ENUM( DS_MIN_SRC2_I32        )
             ENUM( DS_MAX_SRC2_I32        )
             ENUM( DS_MIN_SRC2_U32        )
             ENUM( DS_MAX_SRC2_U32        )
             ENUM( DS_AND_SRC2_B32        )
             ENUM( DS_OR_SRC2_B32         )
             ENUM( DS_XOR_SRC2_B32        )
             ENUM( DS_WRITE_SRC2_B32      )
             ENUM( DS_MIN_SRC2_F32        )
             ENUM( DS_MAX_SRC2_F32        )
             ENUM( DS_ADD_SRC2_U64        )
             ENUM( DS_SUB_SRC2_U64        )
             ENUM( DS_RSUB_SRC2_U64       )
             ENUM( DS_INC_SRC2_U64        )
             ENUM( DS_DEC_SRC2_U64        )
             ENUM( DS_MIN_SRC2_I64        )
             ENUM( DS_MAX_SRC2_I64        )
             ENUM( DS_MIN_SRC2_U64        )
             ENUM( DS_MAX_SRC2_U64        )
             ENUM( DS_AND_SRC2_B64        )
             ENUM( DS_OR_SRC2_B64         )
             ENUM( DS_XOR_SRC2_B64        )
             ENUM( DS_WRITE_SRC2_B64      )
             ENUM( DS_MIN_SRC2_F64        )
             ENUM( DS_MAX_SRC2_F64        )
             ENUM( DS_WRITE_B96           )
             ENUM( DS_WRITE_B128          )
             ENUM( DS_CONDXCHG32_RTN_B128 )
             ENUM( DS_READ_B96            )
             ENUM( DS_READ_B128           )
        END_ENUM_TABLE          
                  
        START_ENUM_TABLE(MUBUFF_Opcodes)
            ENUM(BUFFER_LOAD_FORMAT_X        )
            ENUM(BUFFER_LOAD_FORMAT_XY       )
            ENUM(BUFFER_LOAD_FORMAT_XYZ      )
            ENUM(BUFFER_LOAD_FORMAT_XYZW     )
            ENUM(BUFFER_STORE_FORMAT_X       )
            ENUM(BUFFER_STORE_FORMAT_XY      )
            ENUM(BUFFER_STORE_FORMAT_XYZ     )
            ENUM(BUFFER_STORE_FORMAT_XYZW    )
            ENUM(BUFFER_LOAD_UBYTE           )
            ENUM(BUFFER_LOAD_SBYTE           )
            ENUM(BUFFER_LOAD_USHORT          )
            ENUM(BUFFER_LOAD_SSHORT          )
            ENUM(BUFFER_LOAD_DWORD           )
            ENUM(BUFFER_LOAD_DWORDX2         )
            ENUM(BUFFER_LOAD_DWORDX4         )
            ENUM(BUFFER_LOAD_DWORDX3         )
            ENUM(BUFFER_STORE_BYTE           )
            ENUM(BUFFER_STORE_SHORT          )
            ENUM(BUFFER_STORE_DWORD          )
            ENUM(BUFFER_STORE_DWORDX2        )
            ENUM(BUFFER_STORE_DWORDX4        )
            ENUM(BUFFER_STORE_DWORDX3        )
            ENUM(BUFFER_ATOMIC_SWAP          )
            ENUM(BUFFER_ATOMIC_CMPSWAP       )
            ENUM(BUFFER_ATOMIC_ADD           )
            ENUM(BUFFER_ATOMIC_SUB           )
            ENUM(BUFFER_ATOMIC_RSUB          )
            ENUM(BUFFER_ATOMIC_SMIN          )
            ENUM(BUFFER_ATOMIC_UMIN          )
            ENUM(BUFFER_ATOMIC_SMAX          )
            ENUM(BUFFER_ATOMIC_UMAX          )
            ENUM(BUFFER_ATOMIC_AND           )
            ENUM(BUFFER_ATOMIC_OR            )
            ENUM(BUFFER_ATOMIC_XOR           )
            ENUM(BUFFER_ATOMIC_INC           )
            ENUM(BUFFER_ATOMIC_DEC           )
            ENUM(BUFFER_ATOMIC_FCMPSWAP      )
            ENUM(BUFFER_ATOMIC_FMIN          )
            ENUM(BUFFER_ATOMIC_FMAX          )
            ENUM(BUFFER_ATOMIC_SWAP_X2       )
            ENUM(BUFFER_ATOMIC_CMPSWAP_X2    )
            ENUM(BUFFER_ATOMIC_ADD_X2        )
            ENUM(BUFFER_ATOMIC_SUB_X2        )
            ENUM(BUFFER_ATOMIC_RSUB_X2       )
            ENUM(BUFFER_ATOMIC_SMIN_X2       )
            ENUM(BUFFER_ATOMIC_UMIN_X2       )
            ENUM(BUFFER_ATOMIC_SMAX_X2       )
            ENUM(BUFFER_ATOMIC_UMAX_X2       )
            ENUM(BUFFER_ATOMIC_AND_X2        )
            ENUM(BUFFER_ATOMIC_OR_X2         )
            ENUM(BUFFER_ATOMIC_XOR_X2        )
            ENUM(BUFFER_ATOMIC_INC_X2        )
            ENUM(BUFFER_ATOMIC_DEC_X2        )
            ENUM(BUFFER_ATOMIC_FCMPSWAP_X2   )
            ENUM(BUFFER_ATOMIC_FMIN_X2       )
            ENUM(BUFFER_ATOMIC_FMAX_X2       )
            ENUM(BUFFER_WBINVL1_SC           )
            ENUM(BUFFER_WBINVL1              )
        END_ENUM_TABLE
        
        START_ENUM_TABLE(MTBUFF_Opcodes)
            ENUM(TBUFFER_LOAD_FORMAT_X      )
            ENUM(TBUFFER_LOAD_FORMAT_XY     )
            ENUM(TBUFFER_LOAD_FORMAT_XYZ    )
            ENUM(TBUFFER_LOAD_FORMAT_XYZW   )
            ENUM(TBUFFER_STORE_FORMAT_X     )
            ENUM(TBUFFER_STORE_FORMAT_XY    )
            ENUM(TBUFFER_STORE_FORMAT_XYZ   )
            ENUM(TBUFFER_STORE_FORMAT_XYZW  )
        END_ENUM_TABLE

        START_ENUM_TABLE(MIMG_Opcodes)
            ENUM(IMAGE_LOAD                )
            ENUM(IMAGE_LOAD_MIP            )
            ENUM(IMAGE_LOAD_PCK            )
            ENUM(IMAGE_LOAD_PCK_SGN        )
            ENUM(IMAGE_LOAD_MIP_PCK        )
            ENUM(IMAGE_LOAD_MIP_PCK_SGN    )
            ENUM(IMAGE_STORE               )
            ENUM(IMAGE_STORE_MIP           )
            ENUM(IMAGE_STORE_PCK           )
            ENUM(IMAGE_STORE_MIP_PCK       )
            ENUM(IMAGE_GET_RESINFO         )
            ENUM(IMAGE_ATOMIC_SWAP         )
            ENUM(IMAGE_ATOMIC_CMPSWAP      )
            ENUM(IMAGE_ATOMIC_ADD          )
            ENUM(IMAGE_ATOMIC_SUB          )
            ENUM(IMAGE_ATOMIC_RSUB         )
            ENUM(IMAGE_ATOMIC_SMIN         )
            ENUM(IMAGE_ATOMIC_UMIN         )
            ENUM(IMAGE_ATOMIC_SMAX         )
            ENUM(IMAGE_ATOMIC_UMAX         )
            ENUM(IMAGE_ATOMIC_AND          )
            ENUM(IMAGE_ATOMIC_OR           )
            ENUM(IMAGE_ATOMIC_XOR          )
            ENUM(IMAGE_ATOMIC_INC          )
            ENUM(IMAGE_ATOMIC_DEC          )
            ENUM(IMAGE_ATOMIC_FCMPSWAP     )
            ENUM(IMAGE_ATOMIC_FMIN         )
            ENUM(IMAGE_ATOMIC_FMAX         )
            ENUM(IMAGE_SAMPLE              )
            ENUM(IMAGE_SAMPLE_CL           )
            ENUM(IMAGE_SAMPLE_D            )
            ENUM(IMAGE_SAMPLE_D_CL         )
            ENUM(IMAGE_SAMPLE_L            )
            ENUM(IMAGE_SAMPLE_B            )
            ENUM(IMAGE_SAMPLE_B_CL         )
            ENUM(IMAGE_SAMPLE_LZ           )
            ENUM(IMAGE_SAMPLE_C            )
            ENUM(IMAGE_SAMPLE_C_CL         )
            ENUM(IMAGE_SAMPLE_C_D          )
            ENUM(IMAGE_SAMPLE_C_D_CL       )
            ENUM(IMAGE_SAMPLE_C_L          )
            ENUM(IMAGE_SAMPLE_C_B          )
            ENUM(IMAGE_SAMPLE_C_B_CL       )
            ENUM(IMAGE_SAMPLE_C_LZ         )
            ENUM(IMAGE_SAMPLE_O            )
            ENUM(IMAGE_SAMPLE_CL_O         )
            ENUM(IMAGE_SAMPLE_D_O          )
            ENUM(IMAGE_SAMPLE_D_CL_O       )
            ENUM(IMAGE_SAMPLE_L_O          )
            ENUM(IMAGE_SAMPLE_B_O          )
            ENUM(IMAGE_SAMPLE_B_CL_O       )
            ENUM(IMAGE_SAMPLE_LZ_O         )
            ENUM(IMAGE_SAMPLE_C_O          )
            ENUM(IMAGE_SAMPLE_C_CL_O       )
            ENUM(IMAGE_SAMPLE_C_D_O        )
            ENUM(IMAGE_SAMPLE_C_D_CL_O     )
            ENUM(IMAGE_SAMPLE_C_L_O        )
            ENUM(IMAGE_SAMPLE_C_B_O        )
            ENUM(IMAGE_SAMPLE_C_B_CL_O     )
            ENUM(IMAGE_SAMPLE_C_LZ_O       )
            ENUM(IMAGE_GATHER4             )
            ENUM(IMAGE_GATHER4_CL          )
            ENUM(IMAGE_GATHER4_L           )
            ENUM(IMAGE_GATHER4_B           )
            ENUM(IMAGE_GATHER4_B_CL        )
            ENUM(IMAGE_GATHER4_LZ          )
            ENUM(IMAGE_GATHER4_C           )
            ENUM(IMAGE_GATHER4_C_CL        )
            ENUM(IMAGE_GATHER4_C_L         )
            ENUM(IMAGE_GATHER4_C_B         )
            ENUM(IMAGE_GATHER4_C_B_CL      )
            ENUM(IMAGE_GATHER4_C_LZ        )
            ENUM(IMAGE_GATHER4_O           )
            ENUM(IMAGE_GATHER4_CL_O        )
            ENUM(IMAGE_GATHER4_L_O         )
            ENUM(IMAGE_GATHER4_B_O         )
            ENUM(IMAGE_GATHER4_B_CL_O      )
            ENUM(IMAGE_GATHER4_LZ_O        )
            ENUM(IMAGE_GATHER4_C_O         )
            ENUM(IMAGE_GATHER4_C_CL_O      )
            ENUM(IMAGE_GATHER4_C_L_O       )
            ENUM(IMAGE_GATHER4_C_B_O       )
            ENUM(IMAGE_GATHER4_C_B_CL_O    )
            ENUM(IMAGE_GATHER4_C_LZ_O      )
            ENUM(IMAGE_GET_LOD             )
            ENUM(IMAGE_SAMPLE_CD           )
            ENUM(IMAGE_SAMPLE_CD_CL        )
            ENUM(IMAGE_SAMPLE_C_CD         )
            ENUM(IMAGE_SAMPLE_C_CD_CL      )
            ENUM(IMAGE_SAMPLE_CD_O         )
            ENUM(IMAGE_SAMPLE_CD_CL_O      )
            ENUM(IMAGE_SAMPLE_C_CD_O       )
            ENUM(IMAGE_SAMPLE_C_CD_CL_O    )       
        END_ENUM_TABLE


        START_ENUM_TABLE(FLAT_Opcodes)
            ENUM(FLAT_LOAD_UBYTE          )
            ENUM(FLAT_LOAD_SBYTE          )
            ENUM(FLAT_LOAD_USHORT         )
            ENUM(FLAT_LOAD_SSHORT         )
            ENUM(FLAT_LOAD_DWORD          )
            ENUM(FLAT_LOAD_DWORDX2        )
            ENUM(FLAT_LOAD_DWORDX4        )
            ENUM(FLAT_LOAD_DWORDX3        )
            ENUM(FLAT_STORE_BYTE          )
            ENUM(FLAT_STORE_SHORT         )
            ENUM(FLAT_STORE_DWORD         )
            ENUM(FLAT_STORE_DWORDX2       )
            ENUM(FLAT_STORE_DWORDX4       )
            ENUM(FLAT_STORE_DWORDX3       )
            ENUM(FLAT_ATOMIC_SWAP         )
            ENUM(FLAT_ATOMIC_CMPSWAP      )
            ENUM(FLAT_ATOMIC_ADD          )
            ENUM(FLAT_ATOMIC_SUB          )
            ENUM(FLAT_ATOMIC_SMIN         )
            ENUM(FLAT_ATOMIC_UMIN         )
            ENUM(FLAT_ATOMIC_SMAX         )
            ENUM(FLAT_ATOMIC_UMAX         )
            ENUM(FLAT_ATOMIC_AND          )
            ENUM(FLAT_ATOMIC_OR           )
            ENUM(FLAT_ATOMIC_XOR          )
            ENUM(FLAT_ATOMIC_INC          )
            ENUM(FLAT_ATOMIC_DEC          )
            ENUM(FLAT_ATOMIC_FCMPSWAP     )
            ENUM(FLAT_ATOMIC_FMIN         )
            ENUM(FLAT_ATOMIC_FMAX         )
            ENUM(FLAT_ATOMIC_SWAP_X2      )
            ENUM(FLAT_ATOMIC_CMPSWAP_X2   )
            ENUM(FLAT_ATOMIC_ADD_X2       )
            ENUM(FLAT_ATOMIC_SUB_X2       )
            ENUM(FLAT_ATOMIC_SMIN_X2      )
            ENUM(FLAT_ATOMIC_UMIN_X2      )
            ENUM(FLAT_ATOMIC_SMAX_X2      )
            ENUM(FLAT_ATOMIC_UMAX_X2      )
            ENUM(FLAT_ATOMIC_AND_X2       )
            ENUM(FLAT_ATOMIC_OR_X2        )
            ENUM(FLAT_ATOMIC_XOR_X2       )
            ENUM(FLAT_ATOMIC_INC_X2       )
            ENUM(FLAT_ATOMIC_DEC_X2       )
            ENUM(FLAT_ATOMIC_FCMPSWAP_X2  )
            ENUM(FLAT_ATOMIC_FMIN_X2      )
            ENUM(FLAT_ATOMIC_FMAX_X2      )
        END_ENUM_TABLE

        #define ENUM_EXP(x) { EXP_##x, #x },
        START_ENUM_TABLE(ExportTargets)
            ENUM_EXP(MRT0      )
            ENUM_EXP(MRT1      )
            ENUM_EXP(MRT2      )
            ENUM_EXP(MRT3      )
            ENUM_EXP(MRT4      )
            ENUM_EXP(MRT5      )
            ENUM_EXP(MRT6      )
            ENUM_EXP(MRT7      )
            ENUM_EXP(Z         )
            ENUM_EXP(NULL      )
            ENUM_EXP(POS0      )
            ENUM_EXP(POS1      )
            ENUM_EXP(POS2      )
            ENUM_EXP(POS3      )
            ENUM_EXP(PARAM0    )
            ENUM_EXP(PARAM1    )
            ENUM_EXP(PARAM2    )
            ENUM_EXP(PARAM3    )
            ENUM_EXP(PARAM4    )
            ENUM_EXP(PARAM5    )
            ENUM_EXP(PARAM6    )
            ENUM_EXP(PARAM7    )
            ENUM_EXP(PARAM8    )
            ENUM_EXP(PARAM9    )
            ENUM_EXP(PARAM10   )
            ENUM_EXP(PARAM11   )
            ENUM_EXP(PARAM12   )
            ENUM_EXP(PARAM13   )
            ENUM_EXP(PARAM14   )
            ENUM_EXP(PARAM15   )
            ENUM_EXP(PARAM16   )
            ENUM_EXP(PARAM17   )
            ENUM_EXP(PARAM18   )
            ENUM_EXP(PARAM19   )
            ENUM_EXP(PARAM20   )
            ENUM_EXP(PARAM21   )
            ENUM_EXP(PARAM22   )
            ENUM_EXP(PARAM23   )
            ENUM_EXP(PARAM24   )
            ENUM_EXP(PARAM25   )
            ENUM_EXP(PARAM26   )
            ENUM_EXP(PARAM27   )
            ENUM_EXP(PARAM28   )
            ENUM_EXP(PARAM29   )
            ENUM_EXP(PARAM30   )
            ENUM_EXP(PARAM31   )
        END_ENUM_TABLE

        #define ENUM_NF(x) { NF_##x, #x },
        START_ENUM_TABLE(MTBUFF_NumberFormat)
            ENUM_NF(UNORM     )
            ENUM_NF(SNORM     )
            ENUM_NF(USCALED   )
            ENUM_NF(SSCALED   )
            ENUM_NF(UINT      )
            ENUM_NF(SINT      )
            ENUM_NF(SNORM_NZ  )
            ENUM_NF(FLOAT     )
            ENUM_NF(SRGB      )
            ENUM_NF(UBNORM    )
            ENUM_NF(UBNORM_NZ )
            ENUM_NF(UBINT     )
            ENUM_NF(UBSCALED  )
        END_ENUM_TABLE
        
    #define ENUM_DF(x) { DF_##x, #x },
        START_ENUM_TABLE(MTBUFF_DataFormat)
            ENUM_DF(INVALID    )
            ENUM_DF(8          )
            ENUM_DF(16         )
            ENUM_DF(8_8        )
            ENUM_DF(32         )
            ENUM_DF(16_16      )
            ENUM_DF(10_11_11   )
            ENUM_DF(11_11_10   )
            ENUM_DF(10_10_10_2 )
            ENUM_DF(2_10_10_10 )
            ENUM_DF(8_8_8_8    )
            ENUM_DF(32_32      )
            ENUM_DF(16_16_16_16)
            ENUM_DF(32_32_32   )
            ENUM_DF(32_32_32_32)
        END_ENUM_TABLE

        const char* Search( const EnumLookup* pTable, unsigned int nValue )
        {
            do  // NOTE: could be a binary search, except that the vop3 table is out of order
            {
                if( pTable->n == nValue )
                    break;
                ++pTable;
            } while( pTable->str );   
            return pTable->str;
        }
    }

    #define IMPLEMENT_ENUM_LOOKUP(en) \
    const char* EnumToString(en op) {\
        const char* p = _INTERNAL::Search( _INTERNAL::en##LUT, op ); \
        return p ? p : "?????????"#en; }

    #define IMPLEMENT_OPCODE_LOOKUP(en)\
    const char* EnumToString( en##_Opcodes op ) {\
        const char* p = _INTERNAL::Search( _INTERNAL::en##_Opcodes##LUT, op ); \
        return p ? p : "?????????"#en; }
    
    IMPLEMENT_OPCODE_LOOKUP(SOP2);
    IMPLEMENT_OPCODE_LOOKUP(SOP1);
    IMPLEMENT_OPCODE_LOOKUP(SOPK);
    IMPLEMENT_OPCODE_LOOKUP(SOPC);
    IMPLEMENT_OPCODE_LOOKUP(SOPP);
    IMPLEMENT_OPCODE_LOOKUP(SMEM);
    IMPLEMENT_OPCODE_LOOKUP(VOP2);
    IMPLEMENT_OPCODE_LOOKUP(VOP1);
    IMPLEMENT_OPCODE_LOOKUP(VOPC);
    IMPLEMENT_OPCODE_LOOKUP(VOP3);
    IMPLEMENT_OPCODE_LOOKUP(VINTERP);
    IMPLEMENT_OPCODE_LOOKUP(DS);
    IMPLEMENT_OPCODE_LOOKUP(MUBUFF);
    IMPLEMENT_OPCODE_LOOKUP(MTBUFF);
    IMPLEMENT_OPCODE_LOOKUP(MIMG);
    IMPLEMENT_OPCODE_LOOKUP(FLAT);

    IMPLEMENT_ENUM_LOOKUP(ExportTargets);
    
    IMPLEMENT_ENUM_LOOKUP(MTBUFF_DataFormat);
    IMPLEMENT_ENUM_LOOKUP(MTBUFF_NumberFormat);

}